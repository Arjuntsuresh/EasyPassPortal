@model EasyPassPortal.Models.UserModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditUserPassword</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/CSS/EditUserPassword.css" />
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <div class="navbar navbar-expand-lg">

        <a href="@Url.Action("HomePageDetails","User")"> <p style="color: aliceblue; margin-left:50px; padding-top: 20px; font-size: larger; font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;">EasyPassPortal</p></a>

        <div class="collapse navbar-collapse justify-content-end">
            <ul class="nav ml-auto">



                @{
                    var userEmail = Session["UserEmail"] as string;
                }

                @if (string.IsNullOrEmpty(userEmail))
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("LoginUserDetail", "User")">Signin</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="@Url.Action("AddUserPassportDetail", "User")">Create Passport</a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("AddUserDetail", "User")">Signup</a>
                </li>
                @if (string.IsNullOrEmpty(userEmail))
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("GetUserDetail", "User")">User profile</a>
                    </li>
                }
                <li class="nav-item">
                    <a class="nav-link" aria-current="page" href="@Url.Action("About", "User")">About us</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Contact", "Home")">Contact us</a>
                </li>
                <li class="nav-item">
                    @Html.ActionLink("Logout", "LogOutUser", "User", new { @class = "nav-link" })
                </li>
            </ul>
        </div>
    </div>
    <div class="container mt-5">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Edit Password</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row">
                    @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        @*<div class="mt-3">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
            </div>*@
    </div>
</body>
</html>

