@model EasyPassPortal.Models.UserPassportDetails

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add User Passport Detail</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css" />
    <link rel="stylesheet" href="~/Content/CSS/PassportRegUser.css" />
</head>
<body>
    <div class="navbar navbar-expand-lg">
        <img class="img" src="~/Content/Images/3742bcd3b4b5d471dae27a60bd4b5f07.jpg" style="width:60px;height:56px" alt="Logo">
        <a href="@Url.Action("HomePageDetails","User")"> <p style="color: aliceblue; margin-left:50px; padding-top: 20px; font-size: larger; font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;">EasyPassPortal</p></a>

        <div class="collapse navbar-collapse justify-content-end">
            <ul class="nav ml-auto">


                @{
                    var userEmail = Session["UserEmail"] as string;
                }

                @if (!string.IsNullOrEmpty(userEmail))
                {

                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("GetUserDetail", "User")">User profile</a>
                    </li>

                }
                @if (string.IsNullOrEmpty(userEmail))
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("LoginUserDetail", "User")">Signin</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("AddUserDetail", "User")">Signup</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" aria-current="page" href="@Url.Action("About", "User")">About us</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Contact", "User")">Contact us</a>
                    </li>
                }



                @if (!string.IsNullOrEmpty(userEmail))
                {
                    <li class="nav-item">
                        @Html.ActionLink("Logout", "LogOutUser", "User", new { @class = "nav-link" })
                    </li>
                }
            </ul>
        </div>
    </div>

    <div class="container mt-5">
        @using (Html.BeginForm("AddUserPassportDetail", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="text-center mb-4">User Passport Details</h4>
            <hr />


            <div class="form-group row">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.MothersName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MothersName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MothersName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input" })
                        @Html.Label("Male", htmlAttributes: new { @class = "form-check-label" })
                    </div>
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input" })
                        @Html.Label("Female", htmlAttributes: new { @class = "form-check-label" })
                    </div>
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Other", new { @class = "form-check-input" })
                        @Html.Label("Other", htmlAttributes: new { @class = "form-check-label" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "DateOfBirth" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    <p id="dob_error" class="text-danger"></p>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="State" id="State" class="form-control" onchange="changeValue(this.value)">
                        <option value="" disabled selected>Select State</option>
                        <option value="kerala">Kerala</option>
                        <option value="Karnataka">Karnataka</option>
                        <option value="Tamilnadu">Tamilnadu</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="District" id="District" class="form-control">
                        <option value="" disabled selected>District</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
               
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.AadharNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AadharNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AadharNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.PancardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PancardNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PancardNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="image1" id="image1" class="form-control" style="width:100%" />
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.AadharPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="aadharPhoto1" id="aadharPhoto1" class="form-control" style="width:100%" />
                    @Html.ValidationMessageFor(model => model.AadharPhoto, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.IdProof, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="idProof1" id="idProof1" class="form-control" style="width:100%" />
                    @Html.ValidationMessageFor(model => model.IdProof, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-10 offset-md-2">
                    <input type="checkbox" id="declarationCheckbox" />
                    <label for="declarationCheckbox">I declare that the information provided above is true to the best of my knowledge.</label>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-10 offset-md-2">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @*@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ml-2" })*@
                </div>
            </div>
        </div>
        }
    </div>
    <footer>
        <div class="footer">
            <div class="column">
                <a href="https://www.facebook.com/"><i class="fa fa-facebook" style="width: 50px; height: 50px;"></i></a>
                <a href="https://www.instagram.com/"><i class="fa fa-instagram" style="width: 50px; height: 50px;"></i></a>
                <a href="https://www.youtube.com/"><i class="fa fa-youtube" style="width: 50px; height: 50px;"></i></a>
                <a href="https://x.com/i/flow/login"><i class="fa fa-twitter" style="width: 50px; height: 50px;"></i></a>
            </div>

            <div class="row">
                <ul>
                    <li><a href="@Url.Action("Contact", "User")">Contact us</a></li>
                    <li><a href="#">Privacy Policy</a></li>
                    <li><a href="#">Terms & Conditions</a></li>
                    <li><a href="#">Career</a></li>
                </ul>
            </div>
        </div>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-XYZ1234correcthashvalue=" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.19.3/additional-methods.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(document).on("submit", function () {
                return ValidationForm();
            });
        });
        function ValidationForm() {
            var isValid = true;

            if ($("#FullName").val() == "") {
                alert("Full Name should not be empty.");
                isValid = false;
                preventDefault();
            }
            if ($("#FatherName").val() == "") {
                alert("Father's Name should not be empty.");
                isValid = false;
                preventDefault();
            }
            if ($("#MothersName").val() == "") {
                alert("Mother's Name should not be empty.");
                isValid = false;
               preventDefault();
            }
            if (!$("input[name='Gender']:checked").val()) {
                alert("Gender should be selected.");
                isValid = false;
                preventDefault();
            }
            if ($("#DateOfBirth").val() == "") {
                alert("Date of Birth should not be empty.");
                isValid = false;
                preventDefault();
            }
            if ($("#Address").val() == "") {
                alert("Address should not be empty.");
                isValid = false;
               preventDefault();
            }
            if ($("#Religion").val() == "") {
                alert("Religion should not be empty.");
                isValid = false;
               preventDefault();
            }
            if ($("#State").val() == "") {
                alert("State should not be empty.");
                isValid = false;
             preventDefault();
            }
            if ($("#District").val() == "") {
                alert("District should not be empty.");
                isValid = false;
                preventDefault();
            }
            if ($("#PhoneNumber").val() == "") {
                alert("Phone Number should not be empty.");
                isValid = false;
               preventDefault();
            }
            if ($("#Email").val() == "") {
                alert("Email should not be empty.");
                isValid = false;
                preventDefault();
            }
            if ($("#AadharNumber").val() == "") {
                alert("Aadhar Number should not be empty.");
                isValid = false;
                preventDefault();
            }
            if ($("#PancardNumber").val() == "") {
                alert("Pancard Number should not be empty.");
                isValid = false;
                preventDefault();
            }
            if ($("#Education").val() == "") {
                alert("Education should not be empty.");
                isValid = false;
                preventDefault();
            }
            // Check file input fields
            if ($("#image1").val() == "") {
                alert("Please upload an image.");
                isValid = false;
                preventDefault();
            }
            if ($("#idProof1").val() == "") {
                alert("Please upload an ID Proof.");
                isValid = false;
                preventDefault();
            }
            if ($("#addressProof1").val() == "") {
                alert("Please upload an Address Proof.");
                isValid = false;
                preventDefault();
            }

            return isValid;
        }
    </script>
    <script>
        // Function to handle form submission
        function handleSubmit(event) {
            // Check if the checkbox is checked
            if (!document.getElementById("declarationCheckbox").checked) {
                alert("Please check the declaration box before submitting.");
                event.preventDefault(); // Prevent form submission
            }
        }

        // Attach an event listener to the form submission
        document.querySelector("form").addEventListener("submit", handleSubmit);
    </script>


    <script>
        // Function to set max attribute of date input to today's date
        function setMaxDate() {
            let today = new Date().toISOString().split('T')[0];
            document.getElementById("DateOfBirth").setAttribute("max", today);
        }

        // Function to handle date input changes
        function handleDateChange() {
            let selectedDate = new Date(document.getElementById("DateOfBirth").value);
            let today = new Date();

            // If selected date is in the future, reset input value to today's date
            if (selectedDate > today) {
                document.getElementById("DateOfBirth").value = today.toISOString().split('T')[0];
            }
        }

        // Call setMaxDate function when the page is loaded
        window.onload = function () {
            setMaxDate();

            // Add event listener to handle date changes
            document.getElementById("DateOfBirth").addEventListener("input", handleDateChange);
        };

        // State and District data
        let state = {
            kerala: [
                "Alappuzha", "Ernakulam", "Idukki", "Kannur", "Kasaragod",
                "Kollam", "Kottayam", "Kozhikode", "Malappuram", "Palakkad",
                "Pathanamthitta", "Thiruvananthapuram", "Thrissur", "Wayanad"
            ],
            Karnataka: [
                "Bagalkot", "Bangalore Rural", "Bangalore Urban", "Belgaum",
                "Bellary", "Bidar", "Chamarajanagar", "Chikballapur",
                "Chikkamagaluru", "Chitradurga", "Dakshina Kannada",
                "Davanagere", "Dharwad", "Gadag", "Gulbarga", "Hassan",
                "Haveri", "Kodagu", "Kolar", "Koppal", "Mandya", "Mysore",
                "Raichur", "Ramanagara", "Shimoga", "Tumkur", "Udupi",
                "Uttara Kannada", "Vijayapura", "Yadgir"
            ],
            Tamilnadu: [
                "Ariyalur", "Chengalpattu", "Chennai", "Coimbatore",
                "Cuddalore", "Dharmapuri", "Dindigul", "Erode", "Kallakurichi",
                "Kanchipuram", "Kanyakumari", "Karur", "Krishnagiri",
                "Madurai", "Mayiladuthurai", "Nagapattinam", "Namakkal",
                "Nilgiris", "Perambalur", "Pudukkottai", "Ramanathapuram",
                "Ranipet", "Salem", "Sivaganga", "Tenkasi", "Thanjavur",
                "Theni", "Thoothukudi", "Tiruchirappalli", "Tirunelveli",
                "Tirupattur", "Tiruppur", "Tiruvallur", "Tiruvannamalai",
                "Tiruvarur", "Vellore", "Viluppuram", "Virudhunagar"
            ]
        };

        // Function to change district options based on selected state
        function changeValue(value) {
            const citySelect = document.getElementsByName('District')[0];
            if (value.length === 0) {
                citySelect.innerHTML = '<option disabled selected>District</option>';
            } else {
                let options = '<option disabled selected>District</option>';
                for (let id in state[value]) {
                    options += "<option>" + state[value][id] + "</option>";
                }
                citySelect.innerHTML = options;
            }
        }

        function setMaxDate() {
            let today = new Date().toISOString().split('T')[0];
            document.getElementById("DateOfBirth").setAttribute("max", today);
        }
    </script>
    }
</body>
</html>
