(()=>{function m(){const a=new Proxy(new URLSearchParams(window.location.search),{get:(b,c)=>b.get(c)});window.addEventListener("message",n);h=a.parent_domain;window.parent.postMessage({method:"ESW_3RDPARTY_STORAGE_READY"},h)}function n(a){if(a&&a.source&&a.source&&window.parent&&a.source===window.parent)switch(a.data.method){case "ESW_3RDPARTY_STORAGE_REQUEST":var b=window.parent,c=b.postMessage;a=a.data.data.orgId;var e=null;let f=null;try{e=p(a,localStorage)}catch(d){console.log(`failed to get data for org ${a}, 3rd party localStorage is not available`)}try{f=
p(a,sessionStorage)}catch(d){console.log(`failed to get data for org ${a}, 3rd party sessionStorage is not available`)}c.call(b,{method:"ESW_3RDPARTY_STORAGE_RESPONSE",data:{localStorage:e,sessionStorage:f}},h);break;case "ESW_3RDPARTY_STORAGE_SET_ITEMS":q(a.data.data.orgId,a.data.data.conversationId,a.data.data.key,a.data.data.value,a.data.data.inLocalStorage);break;case "ESW_3RDPARTY_STORAGE_CLEAR":b=a.data.data;c=`${b}_WEB_STORAGE`;if(h===window.location.origin)console.log(`skip 3rd party clear storage for org ${b}, since 3rd party storage domain is the same as 1st party.`);
else{try{localStorage.removeItem(c)}catch(d){console.log(`failed to delete localStorage for org ${b}, 3rd party access is not available`)}try{sessionStorage.removeItem(c)}catch(d){console.log(`failed to delete sessionStorage for org ${b}, 3rd party access is not available`)}}break;case "ESW_3RDPARTY_STORAGE_SET_OBJECTS":b=a.data.data.orgId;c=a.data.data.localStorageObj;a=a.data.data.sessionStorageObj;e=`${b}_WEB_STORAGE`;if(c)try{localStorage.setItem(e,c)}catch(d){console.log(`failed to set localStorage object for org ${b}, 3rd party access is not available`)}if(a)try{sessionStorage.setItem(e,
a)}catch(d){console.log(`failed to set sessionStorage object for org ${b}, 3rd party access is not available`)}break;default:console.error("Unrecognized event name: "+a.data.method)}else console.error("Unexpected message source (message not from parent contentWindow): "+a.origin)}function p(a,b){return b?(a=`${a}_WEB_STORAGE`,b.getItem(a)&&JSON.parse(b.getItem(a))||{}):null}function q(a,b,c,e,f){let d=`${a}_WEB_STORAGE`;try{let k=f?localStorage:sessionStorage,g,l=k.getItem(d);l||(l="{}");g=JSON.parse(l);
g[b]||(g[b]={});g[b][c]=e;k.setItem(d,JSON.stringify(g))}catch(k){f?(console.log(`failed to set ${c} in ${d} - localStorage not available`),q(a,c,e,!1)):console.log(`failed to set ${c} in ${d} - sessionStorage not available`)}}let h;m.prototype.removeEventHandlers=function(){window.removeEventListener("message",n)};window.embeddedservice_sessionApi=new m})();
